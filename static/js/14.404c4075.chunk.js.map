{"version":3,"sources":["config.js","components/ModalForm/ModalForm.js","components/ModalWarning/ModalWarning.js","views/pages/coursesCategories/colors.js","services/tagService.js","views/pages/courses/tags/Tags.js"],"names":["api","server","ModalForm","children","visible","modalToggle","title","onSubmit","isEditing","show","onClose","closeButton","onClick","color","ModalWarning","colors","name","code","getTags","a","localStorage","getItem","token","config","headers","axios","get","response","console","log","data","createTag","tag","post","deleteTag","id","delete","updateTag","put","fields","key","value","sorter","fields1","actions","Tags","history","location","useLocation","useState","visibleForm","setVisibleForm","setData","deleteRow","setDeleteRow","setEditing","error","setError","idForDelete","setIdForDelete","loading","setLoading","course","values","setValues","toggle","useEffect","handleLogout","getData","undefined","push","datos","filtered","filter","curso","length","storeTag","FormData","append","deleteItem","handleDelete","update","className","xs","lg","toUpperCase","items","tableFilter","label","placeholder","itemsPerPage","columnHeaderSlot","pagination","striped","responsive","scopedSlots","item","style","maxHeight","height","maxWidth","marginRight","handleEdit","sm","htmlFor","onChange","e","preventDefault","target","handleChange"],"mappings":"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","file":"static/js/14.404c4075.chunk.js","sourcesContent":["let prod = false;\nconst api = {\n    // server: 'https://arbam-test.herokuapp.com'\n    // server: prod ? 'http://8f406a199dd5.ngrok.io/http://ec2-3-16-129-81.us-east-2.compute.amazonaws.com:1337' : 'http://localhost:8080/http://ec2-3-16-129-81.us-east-2.compute.amazonaws.com:1337'\n    server: !prod ? 'http://ec2-3-16-129-81.us-east-2.compute.amazonaws.com:1337' : 'http://localhost:1337',\n};\n\nexport default api;","import classNames from 'classnames'\nimport {\n  CRow,\n  CCol,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CModal,\n  CButton,\n} from '@coreui/react'\n\n\nconst ModalForm = ({children, visible, modalToggle, title, onSubmit, isEditing }) => {\n\n// const [modal, setModal] = useState(false);\n\n// const toggle = ()=>{\n//   setModal(!modal);\n// }\n\nreturn (\n  <>\n    <CModal\n      show={visible}\n      onClose={modalToggle}\n    >\n      <CModalHeader closeButton>{title}</CModalHeader>\n      <CModalBody>\n        {children}\n      </CModalBody>\n      <CModalFooter>\n      { isEditing ? null :  <CButton onClick={onSubmit} color=\"primary\">Guardar</CButton>}\n        <CButton\n          color=\"secondary\"\n          onClick={modalToggle}\n        >Cancel</CButton>\n      </CModalFooter>\n    </CModal>\n  </>\n)\n}\n\nexport default ModalForm","import {\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CModal,\n  CButton,\n  CModalTitle,\n} from '@coreui/react'\n\n\nconst ModalWarning = ({children, visible, modalToggle, title, onSubmit }) => {\n\n// const [modal, setModal] = useState(false);\n\n// const toggle = ()=>{\n//   setModal(!modal);\n// }\n\nreturn (\n    <CModal\n    show={visible}\n    onClose={modalToggle}\n    color=\"warning\"\n    >\n        <CModalHeader closeButton>\n             <CModalTitle>{title}</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n       {children}\n        </CModalBody>\n    <CModalFooter>\n        <CButton color=\"warning\" onClick={onSubmit}>Eliminar</CButton>\n        <CButton color=\"secondary\" onClick={modalToggle}>Cancelar</CButton>\n    </CModalFooter>\n    </CModal>);\n}\n\nexport default ModalWarning","export const colors = [\n{\n    name: 'Anaranjado',\n    code: '#C5A509',\n},\n{\n    name: 'Rojo',\n    code: '#de0404',\n},\n{\n    name: 'Amarillo',\n    code: '#dbc609',\n},\n{\n    name: 'Negro',\n    code: '#000000',\n},\n{\n    name: 'Azul',\n    code: '#3642c7',\n},\n{\n    name: 'Celeste',\n    code: '#0ec3c9',\n},\n{\n    name: 'Verde',\n    code: '#07b857',\n},\n{\n    name: 'Violeta',\n    code: '#941ee3',\n},\n\n];","import axios from 'axios';\nimport api from '../config'\n\nexport const getTags = async () =>  {\n    const token = await localStorage.getItem('apitoken');\n    const config = {\n        headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Accept' : '*/*',\n            // 'host': 'arbam-test.herokuapp.com',\n            'Content-Type':'application/x-www-form-urlencoded',\n            'Authorization': `Bearer ${token}`,\n        }\n        }\n    try {\n    const response = await axios.get(api.server+'/api/tag/',config);\n    console.log(response.data);\n    return response.data;\n    } catch (err) {\n        console.log(err)\n    }\n}\n\nexport const createTag = async (tag) =>  {\n    const token = await localStorage.getItem('apitoken');\n    const config = {\n        headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Accept' : '*/*',\n            // 'host': 'arbam-test.herokuapp.com',\n            'Content-Type':'application/x-www-form-urlencoded',\n            'Authorization': `Bearer ${token}`,\n        }\n        }\n    try {\n    const response = await axios.post(api.server+'/api/tag',tag,config);\n    console.log(response.data);\n    return response.data;\n    } catch (err) {\n        console.log(err)\n    }\n}\n\nexport const deleteTag = async (id) =>  {\n    const token = await localStorage.getItem('apitoken');\n    const config = {\n        headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Accept' : '*/*',\n            'host': 'arbam-test.herokuapp.com',\n            'Content-Type':'application/x-www-form-urlencoded',\n            'Authorization': `Bearer ${token}`,\n        }\n        }\n    try {\n    const response = await axios.delete(api.server+'/api/tag/'+id,config);\n    console.log(response.data);\n    return response.data;\n    } catch (err) {\n        console.log(err)\n    }\n}\n\nexport const updateTag = async (data,id) =>  {\n    const token = await localStorage.getItem('apitoken');\n    const config = {\n            headers: {\n                'Access-Control-Allow-Origin': '*',\n                'Accept' : '*/*',\n                'host': 'arbam-test.herokuapp.com',\n                'Content-Type':'application/x-www-form-urlencoded',\n                'Authorization': `Bearer ${token}`,\n            }\n        }\n    try {\n    const response = await axios.put(api.server+'/api/tag/'+id,data,config);\n    console.log(response.data);\n    return response.data;\n    } catch (err) {\n        console.log(err)\n    }\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useState, createRef } from 'react'\nimport classNames from 'classnames'\nimport {\n  CRow,\n  CCol,\n  CCard,\n  CCardHeader,\n  CCardBody,\n  CBadge,\n  CDataTable,\n  CButton,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CAlert,\n  CSelect,\n} from '@coreui/react'\nimport ModalForm from '../../../../components/ModalForm/ModalForm';\nimport ModalWarning from '../../../../components/ModalWarning/ModalWarning';\nimport {colors} from '../../coursesCategories/colors';\n\nimport {createTag, deleteTag, updateTag, getTags} from '../../../../services/tagService';\nimport {useLocation} from 'react-router-dom';\n\n\nconst fields = [{key: 'name', value: 'nombre', sorter: true} ,'actions']\nconst fields1 = { name:'Nombre', actions: 'Acciones'}\nconst columnsFilter = { name:'Nombre', description: 'Descripcion', financial_knowledge: 'conocimiento Financiero', value: 'valor', highlight: 'Destacado' }\n// const fields2 = ['name']\n\nconst Tags = ({history}) => {\n  const location = useLocation();\n  const [visibleForm, setVisibleForm] = useState(false);\n  const [data, setData] = useState([]);\n  const [deleteRow, setDeleteRow] = useState(false);\n  const [isEditing, setEditing] = useState(false)\n  const [error, setError] = useState(false)\n  const [idForDelete, setIdForDelete] = useState(null);\n  const [loading, setLoading] = useState(null);\n  const [values, setValues] = useState({\n    id: '',\n    course: location.id,\n    name: '',\n  });\n  const toggle = ()=>{\n    setValues({\n        id: '',\n        course: location.id,\n        name: '',\n    })\n    setVisibleForm(!visibleForm);\n    setError(false);\n    setEditing(false);\n}\n useEffect (() => {\n  handleLogout();\n  getData();\n},[])\n\n\nconst handleLogout = async () => {\n    const token =  await localStorage.getItem('apitoken');\n    if(token===null || token === undefined){\n      history.push('/login');\n    }\n   }\n\n const getData = async () => {\n   try {\n    setLoading(true);\n    const response = await getTags();\n    // let filter = response.data.map(data => (\n    //   data.filter(alumno => alumno.course === location.id)\n    // ))\n    // console.log(filter);\n    // let filtered = response.data.filter(res => res.course = location.id)\n    let datos = response.data;\n    const filtered = datos.filter((curso) => {\n      return curso.course === values.course\n    })\n    await setData(filtered);\n    if(response.data.length > 0) await setLoading(false);\n   } catch(err){\n     console.log(err)\n   }\n }\n\n const storeTag = async () => {\n    let tag = new FormData();\n    if(values.name===''){\n        setError(true)\n    }else{\n        tag.append('name', values.name);\n        tag.append('course', values.course);\n      try {\n        const response = await createTag(tag)\n        if(response) {\n            console.log(response.data, 'tag creado');\n            setVisibleForm(!visibleForm);\n            await getData();\n            setError(false)\n        }\n    } catch(err){\n        console.log(err)\n    }\n}\n }\n\n const deleteItem = (id) => {\n    setDeleteRow(!deleteRow);\n    setIdForDelete(id)\n  }\n\n  const handleDelete = async (id) => {\n     console.log(id,'si entra al delete')\n     try {\n    if(id!==null){\n    await deleteTag(id)\n  }\n    } catch (err) {\n        console.log(err);\n    }\n    setDeleteRow(!deleteRow);\n    await getData();\n  }\n\n  const handleEdit = (item) => {\n\n    setVisibleForm(!visibleForm);\n    setEditing(true);\n    setError(false);\n    setValues({...values,\n        id: item.id,\n        name: item.name,\n        course: item.course,\n      })\n\n  }\n\n  const update = async () => {\n    let tag = new FormData();\n    tag.append('name', values.name);\n    tag.append('course', values.course);\n    if(values.id !== '' && values.name!=='' ){\n          try {\n\n            const response = await updateTag(tag, values.id)\n            if(response) {\n                console.log(response.data, 'tag updated');\n                setVisibleForm(!visibleForm);\n                await getData();\n                setEditing(false);\n            }\n          } catch(err) {\n              console.log(err);\n          }\n      } else {\n          setError(true);\n      }\n  }\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    setValues({...values,\n      [e.target.name] : e.target.value\n    })\n    console.log(values);\n\n  }\n\n  return (\n    <>\n      <CCard>\n        <CCardHeader>\n          {/* <DocsLink href=\"https://coreui.io/docs/utilities/colors/\"/> */}\n          <CButton\n          color=\"primary\"\n\n      onClick={() => toggle()}\n      className=\"mr-1\"\n    >Agregar Etiqueta</CButton>\n        </CCardHeader>\n        <CCol xs=\"12\" lg=\"12\">\n          <CCard>\n            <CCardHeader>\n              Etiquetas de <b>{location.course.toUpperCase()}</b>\n            </CCardHeader>\n            <CCardBody>\n            <CDataTable\n              items={data}\n              fields={fields}\n              tableFilter={{label: 'Buscar', placeholder: 'Buscar Etiqueta'}}\n              itemsPerPage={10}\n              columnHeaderSlot={fields1}\n              loading={loading}\n              pagination\n              striped\n              responsive\n              scopedSlots = {{\n                'name':\n            (item) => (\n            <td style={{maxHeight:20, height: 20, maxWidth: 80}}>{`${item.name}`}</td>\n            ),\n                'actions':\n            (item) => (\n              <td>\n                <CButton style={{marginRight: 10}} onClick={() => handleEdit(item)} color=\"warning\">Editar</CButton>\n                <CButton onClick={() => deleteItem(item.id)} color=\"danger\">Eliminar</CButton>\n              </td>\n            ),\n\n            }\n          }\n            />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CCard>\n      <ModalForm visible={visibleForm} modalToggle={toggle} onSubmit={!isEditing ? () => storeTag() : () => update()} title={`Etiqueta de ${location.course.toUpperCase()}`} >\n      <CCol xs=\"12\" sm=\"12\">\n          <CCard>\n            <CCardBody>\n              <CFormGroup>\n                <CLabel htmlFor=\"name\">Nombre</CLabel>\n                <CInput id=\"name\" name=\"name\" value={values.name} onChange={(e) => handleChange(e)} placeholder=\"Nombre de la Etiqueta\" />\n              </CFormGroup>\n              { error ? <CCol>\n                    <CFormGroup>\n                        <CAlert color=\"danger\">\n                         Debes ingresar todos los campos!\n                        </CAlert>\n                    </CFormGroup>\n                </CCol>: null}\n                {/* <CFormGroup row>\n                  <CLabel col md=\"3\" htmlFor=\"image\">Imagen</CLabel>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInputFile id=\"image\" name=\"image\"/>\n                  </CCol>\n                </CFormGroup> */}\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </ModalForm>\n      <ModalWarning visible={deleteRow} onSubmit={() => handleDelete(idForDelete)} modalToggle={() => deleteItem(null)} title=\"Eliminar Etiqueta\">Estas seguro de eliminar esta Etiqueta?</ModalWarning>\n\n    </>\n  )\n}\n\nexport default Tags\n"],"sourceRoot":""}