{"version":3,"sources":["config.js","components/ModalForm/ModalForm.js","components/ModalWarning/ModalWarning.js","services/categoriesService.js","views/pages/coursesCategories/colors.js","views/pages/coursesCategories/CoursesCategories.js"],"names":["api","server","ModalForm","children","visible","modalToggle","title","onSubmit","isEditing","show","onClose","closeButton","onClick","color","ModalWarning","getCategories","a","localStorage","getItem","token","config","headers","axios","get","response","console","log","data","createCategory","category","post","deleteCategory","id","delete","updateCategory","put","colors","name","code","fields","key","value","sorter","fields1","actions","CoursesCategories","history","useState","visibleForm","setVisibleForm","setData","deleteRow","setDeleteRow","setEditing","error","setError","idForDelete","setIdForDelete","loading","setLoading","values","setValues","toggle","useEffect","handleLogout","getData","undefined","push","length","storeCategory","FormData","append","deleteItem","handleDelete","updateCat","handleChange","e","preventDefault","target","className","xs","lg","items","tableFilter","label","placeholder","itemsPerPage","columnHeaderSlot","pagination","striped","responsive","scopedSlots","item","style","maxHeight","height","maxWidth","backgroundColor","width","marginRight","handleEdit","sm","htmlFor","onChange","custom","map","flexDirection","fontWeight","textShadow"],"mappings":"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","file":"static/js/11.d4a65ba8.chunk.js","sourcesContent":["let prod = true;\nconst api = {\n    // server: 'https://cors-anywhere.herokuapp.com/https://arbam-test.herokuapp.com'\n    server: prod ? 'http://localhost:1337' : 'http://localhost:8080/http://ec2-3-16-129-81.us-east-2.compute.amazonaws.com:1337'\n    // server: 'http://ec2-3-16-129-81.us-east-2.compute.amazonaws.com:1337'\n};\n\nexport default api;","import classNames from 'classnames'\nimport {\n  CRow,\n  CCol,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CModal,\n  CButton,\n} from '@coreui/react'\n\n\nconst ModalForm = ({children, visible, modalToggle, title, onSubmit, isEditing }) => {\n\n// const [modal, setModal] = useState(false);\n\n// const toggle = ()=>{\n//   setModal(!modal);\n// }\n\nreturn (\n  <>\n    <CModal\n      show={visible}\n      onClose={modalToggle}\n    >\n      <CModalHeader closeButton>{title}</CModalHeader>\n      <CModalBody>\n        {children}\n      </CModalBody>\n      <CModalFooter>\n      { isEditing ? null :  <CButton onClick={onSubmit} color=\"primary\">Guardar</CButton>}\n        <CButton\n          color=\"secondary\"\n          onClick={modalToggle}\n        >Cancel</CButton>\n      </CModalFooter>\n    </CModal>\n  </>\n)\n}\n\nexport default ModalForm","import {\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CModal,\n  CButton,\n  CModalTitle,\n} from '@coreui/react'\n\n\nconst ModalWarning = ({children, visible, modalToggle, title, onSubmit }) => {\n\n// const [modal, setModal] = useState(false);\n\n// const toggle = ()=>{\n//   setModal(!modal);\n// }\n\nreturn (\n    <CModal\n    show={visible}\n    onClose={modalToggle}\n    color=\"warning\"\n    >\n        <CModalHeader closeButton>\n             <CModalTitle>{title}</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n       {children}\n        </CModalBody>\n    <CModalFooter>\n        <CButton color=\"warning\" onClick={onSubmit}>Eliminar</CButton>\n        <CButton color=\"secondary\" onClick={modalToggle}>Cancelar</CButton>\n    </CModalFooter>\n    </CModal>);\n}\n\nexport default ModalWarning","import axios from 'axios';\nimport api from '../config'\n\nexport const getCategories = async () =>  {\n    const token = await localStorage.getItem('apitoken');\n    const config = {\n        headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Accept' : '*/*',\n            'host': 'arbam-test.herokuapp.com',\n            'Content-Type':'application/x-www-form-urlencoded',\n            'Authorization': token,\n        }\n        }\n    try {\n    const response = await axios.get(api.server+'/api/categorias',config);\n    console.log(response.data);\n    return response.data;\n    } catch (err) {\n        console.log(err)\n    }\n}\n\nexport const createCategory = async (category) =>  {\n    const token = await localStorage.getItem('apitoken');\n    const config = {\n        headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Accept' : '*/*',\n            'host': 'arbam-test.herokuapp.com',\n            'Content-Type':'application/x-www-form-urlencoded',\n            'Authorization': token,\n        }\n        }\n    try {\n    const response = await axios.post(api.server+'/api/categorias',category,config);\n    console.log(response.data);\n    return response.data;\n    } catch (err) {\n        console.log(err)\n    }\n}\n\nexport const deleteCategory = async (id) =>  {\n    const token = await localStorage.getItem('apitoken');\n    const config = {\n        headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Accept' : '*/*',\n            'host': 'arbam-test.herokuapp.com',\n            'Content-Type':'application/x-www-form-urlencoded',\n            'Authorization': token,\n        }\n        }\n    try {\n    const response = await axios.delete(api.server+'/api/categorias/'+id,config);\n    console.log(response.data);\n    return response.data;\n    } catch (err) {\n        console.log(err)\n    }\n}\n\nexport const updateCategory = async (category,id) =>  {\n    const token = await localStorage.getItem('apitoken');\n    const config = {\n        headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Accept' : '*/*',\n            'host': 'arbam-test.herokuapp.com',\n            'Content-Type':'application/x-www-form-urlencoded',\n            'Authorization': token,\n        }\n        }\n    try {\n    const response = await axios.put(api.server+'/api/categorias/'+id,category,config);\n    console.log(response.data);\n    return response.data;\n    } catch (err) {\n        console.log(err)\n    }\n}","export const colors = [\n{\n    name: 'Anaranjado',\n    code: '#C5A509',\n},\n{\n    name: 'Rojo',\n    code: '#de0404',\n},\n{\n    name: 'Amarillo',\n    code: '#dbc609',\n},\n{\n    name: 'Negro',\n    code: '#000000',\n},\n{\n    name: 'Azul',\n    code: '#3642c7',\n},\n{\n    name: 'Celeste',\n    code: '#0ec3c9',\n},\n{\n    name: 'Verde',\n    code: '#07b857',\n},\n{\n    name: 'Violeta',\n    code: '#941ee3',\n},\n\n];","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useState, createRef } from 'react'\nimport classNames from 'classnames'\nimport {\n  CRow,\n  CCol,\n  CCard,\n  CCardHeader,\n  CCardBody,\n  CBadge,\n  CDataTable,\n  CButton,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CAlert,\n  CSelect,\n} from '@coreui/react'\nimport ModalForm from '../../../components/ModalForm/ModalForm';\nimport ModalWarning from '../../../components/ModalWarning/ModalWarning';\nimport {colors} from './colors';\n\nimport {getCategories, deleteCategory, createCategory, updateCategory} from '../../../services/categoriesService';\n\n\nconst getBadge = highlight => {\n  switch (highlight) {\n    case true: return 'success'\n    case false: return 'danger'\n    default: return 'primary'\n  }\n}\nconst fields = [{key: 'name', value: 'nombre', sorter: true}, 'color' ,'actions']\nconst fields1 = { name:'Nombre', color: 'Color', actions: 'Acciones'}\nconst columnsFilter = { name:'Nombre', description: 'Descripcion', financial_knowledge: 'conocimiento Financiero', value: 'valor', highlight: 'Destacado' }\n// const fields2 = ['name']\n\nconst CoursesCategories = ({history}) => {\n  const [visibleForm, setVisibleForm] = useState(false);\n  const [data, setData] = useState([]);\n  const [deleteRow, setDeleteRow] = useState(false);\n  const [isEditing, setEditing] = useState(false)\n  const [error, setError] = useState(false)\n  const [idForDelete, setIdForDelete] = useState(null);\n  const [loading, setLoading] = useState(null);\n  const [values, setValues] = useState({\n    id: '',\n    name: '',\n    color: '',\n  });\n  const toggle = ()=>{\n    setValues({\n        name: '',\n        color: '',\n    })\n    setVisibleForm(!visibleForm);\n    setError(false);\n    setEditing(false);\n}\n useEffect (() => {\n  handleLogout();\n  getData();\n},[])\n\n\nconst handleLogout = async () => {\n    const token =  await localStorage.getItem('apitoken');\n    if(token===null || token === undefined){\n      history.push('/login');\n    }\n   }\n\n const getData = async () => {\n   try {\n    setLoading(true);\n    const response = await getCategories();\n    await setData(response.data);\n    if(response.data.length > 0) await setLoading(false);\n   } catch(err){\n     console.log(err)\n   }\n }\n\n const storeCategory = async () => {\n    let category = new FormData();\n    if(values.name===''){\n        setError(true)\n    }else{\n        category.append('name', values.name);\n    try {\n        const response = await createCategory(category)\n        if(response) {\n            console.log(response.data, 'usuario creado');\n            setVisibleForm(!visibleForm);\n            await getData();\n            setError(false)\n        }\n    } catch(err){\n        console.log(err)\n    }\n}\n }\n\n const deleteItem = (id) => {\n    setDeleteRow(!deleteRow);\n    setIdForDelete(id)\n  }\n\n  const handleDelete = async (id) => {\n     console.log(id,'si entra al delete')\n     try {\n    if(id!==null){\n    await deleteCategory(id)\n  }\n    } catch (err) {\n        console.log(err);\n    }\n    setDeleteRow(!deleteRow);\n    await getData();\n  }\n\n  const handleEdit = (item) => {\n\n    setVisibleForm(!visibleForm);\n    setEditing(true);\n    setError(false);\n    setValues({...values,\n        id: item.id,\n        name: item.name,\n        color: item.color,\n      })\n\n  }\n\n  const updateCat = async () => {\n    let category = new FormData();\n    category.append('name', values.name);\n    category.append('color', values.color);\n    if(values.id !== '' && values.name!=='' ){\n          try {\n\n            const response = await updateCategory(category, values.id)\n            if(response) {\n                console.log(response.data, 'usuario creado');\n                setVisibleForm(!visibleForm);\n                await getData();\n                setEditing(false);\n            }\n          } catch(err) {\n              console.log(err);\n          }\n      } else {\n          setError(true);\n      }\n  }\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    setValues({...values,\n      [e.target.name] : e.target.value\n    })\n    console.log(values);\n\n  }\n\n  return (\n    <>\n      <CCard>\n        <CCardHeader>\n          {/* <DocsLink href=\"https://coreui.io/docs/utilities/colors/\"/> */}\n          <CButton\n          color=\"primary\"\n\n      onClick={() => toggle()}\n      className=\"mr-1\"\n    >Agregar Categoría</CButton>\n        </CCardHeader>\n        <CCol xs=\"12\" lg=\"12\">\n          <CCard>\n            <CCardHeader>\n              Categorías de Cursos\n            </CCardHeader>\n            <CCardBody>\n            <CDataTable\n              items={data}\n              fields={fields}\n              tableFilter={{label: 'Buscar', placeholder: 'Buscar Categoria'}}\n              itemsPerPage={10}\n              columnHeaderSlot={fields1}\n              loading={loading}\n              pagination\n              striped\n              responsive\n              scopedSlots = {{\n                'name':\n            (item) => (\n            <td style={{maxHeight:20, height: 20, maxWidth: 80}}>{`${item.name}`}</td>\n            ),\n              'color':\n              (item) => (\n              <td style={{maxHeight:20, height: 20, maxWidth: 80}}><div style={{backgroundColor: item.color, width: 20, height: 20}}></div></td>\n              ),\n                'actions':\n            (item) => (\n              <td>\n                <CButton style={{marginRight: 10}} onClick={() => handleEdit(item)} color=\"warning\">Editar</CButton>\n                <CButton onClick={() => deleteItem(item.id)} color=\"danger\">Eliminar</CButton>\n              </td>\n            ),\n\n            }\n          }\n            />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CCard>\n      <ModalForm visible={visibleForm} modalToggle={toggle} onSubmit={!isEditing ? () => storeCategory() : () => updateCat()} title=\"Categoria\" >\n      <CCol xs=\"12\" sm=\"12\">\n          <CCard>\n            <CCardBody>\n              <CFormGroup>\n                <CLabel htmlFor=\"name\">Nombre</CLabel>\n                <CInput id=\"name\" name=\"name\" value={values.name} onChange={(e) => handleChange(e)} placeholder=\"Nombre de la categoria\" />\n              </CFormGroup>\n              <CFormGroup>\n                <CLabel htmlFor=\"color\">Color</CLabel>\n                <CSelect onChange={(e) => handleChange(e)} value={values.color} custom name=\"color\" id=\"color\">\n                  {/* { editing ?\n                      <option value={values.financial_knowledge.toUpperCase()}>{values.financial_knowledge.toLocaleLowerCase()}</option>\n                  : null}    */}\n                  {isEditing ? <>\n                      <option value=\"\">Selecciona</option>\n                      {\n                         colors.map((item) => (\n\n                          <option value={item.code}style={{ flexDirection: 'column', color: item.code, fontWeight: 600, textShadow: '2px 2px #000000'}}>{item.name}</option>\n                          ))\n                       }\n                       </> :\n                       <>\n                      <option value=\"\">Selecciona</option>\n                       {\n                         colors.map((item) => (\n\n                          <option value={item.code}style={{ flexDirection: 'column', color: item.code, fontWeight: 600, textShadow: '2px 2px #000000'}}>{item.name}</option>\n                          ))\n                       } </>}\n\n                    </CSelect>\n              </CFormGroup>\n              { error ? <CCol>\n                    <CFormGroup>\n                        <CAlert color=\"danger\">\n                         Debes ingresar todos los campos!\n                        </CAlert>\n                    </CFormGroup>\n                </CCol>: null}\n                {/* <CFormGroup row>\n                  <CLabel col md=\"3\" htmlFor=\"image\">Imagen</CLabel>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInputFile id=\"image\" name=\"image\"/>\n                  </CCol>\n                </CFormGroup> */}\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </ModalForm>\n      <ModalWarning visible={deleteRow} onSubmit={() => handleDelete(idForDelete)} modalToggle={() => deleteItem(null)} title=\"Eliminar Categoria\">Estas seguro de eliminar esta categoría?</ModalWarning>\n\n    </>\n  )\n}\n\nexport default CoursesCategories\n"],"sourceRoot":""}