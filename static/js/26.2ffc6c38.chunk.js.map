{"version":3,"sources":["reusable/DocsLink.js","config.js","components/ModalForm/ModalForm.js","components/ModalWarning/ModalWarning.js","services/usersService.js","views/pages/users/Users.js"],"names":["DocsLink","props","name","text","rest","href","className","rel","target","React","memo","api","server","ModalForm","children","visible","modalToggle","title","onSubmit","isEditing","show","onClose","closeButton","onClick","color","ModalWarning","getUsers","a","localStorage","getItem","token","config","headers","axios","get","response","console","log","data","createUser","user","post","deleteUser","id","delete","fields","key","value","sorter","fields1","email","phone_number","actions","Users","history","useState","visibleForm","setVisibleForm","deleteRow","setDeleteRow","editing","setEditing","error","setError","idForDelete","setIdForDelete","setData","loading","setLoading","password","confirm","area_code","values","setValues","toggle","useEffect","handleLogout","getData","undefined","push","reverse","length","deleteItem","handleDelete","storeUser","FormData","append","handleChange","e","preventDefault","xs","lg","items","columnHeaderSlot","itemsPerPage","columnFilterSlot","tableFilter","label","placeholder","pagination","striped","responsive","scopedSlots","item","style","marginRight","handleEdit","sm","hidden","htmlFor","onChange","required","valid","includes","invalid","type","row"],"mappings":"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","file":"static/js/26.2ffc6c38.chunk.js","sourcesContent":["import React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = props => {\n  const {\n    name,\n    text,\n    ...rest\n  } = props\n\n  const href = name ? `https://coreui.io/react/docs/components/${name}` : props.href\n\n  return (\n    <div className=\"card-header-actions\">\n      <CLink \n        {...rest}\n        href={href}\n        rel=\"noreferrer noopener\" \n        target=\"_blank\" \n        className=\"card-header-action\"  \n      >\n        <small className=\"text-muted\">{ text || 'docs' }</small>\n      </CLink>\n    </div>\n  )\n}\n\nexport default React.memo(DocsLink)","const api = {\n    // server: 'https://cors-anywhere.herokuapp.com/https://arbam-test.herokuapp.com'\n    server: 'https://cors-anywhere.herokuapp.com/http://ec2-3-16-129-81.us-east-2.compute.amazonaws.com:1337'\n    // server: 'http://ec2-3-16-129-81.us-east-2.compute.amazonaws.com:1337'\n};\n\nexport default api;","import classNames from 'classnames'\nimport {\n  CRow,\n  CCol,\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CModal,\n  CButton,\n} from '@coreui/react'\n\n\nconst ModalForm = ({children, visible, modalToggle, title, onSubmit, isEditing }) => {\n\n// const [modal, setModal] = useState(false);\n\n// const toggle = ()=>{\n//   setModal(!modal);\n// }\n\nreturn (\n  <>\n    <CModal\n      show={visible}\n      onClose={modalToggle}\n    >\n      <CModalHeader closeButton>{title}</CModalHeader>\n      <CModalBody>\n        {children}\n      </CModalBody>\n      <CModalFooter>\n      { isEditing ? null :  <CButton onClick={onSubmit} color=\"primary\">Guardar</CButton>}\n        <CButton\n          color=\"secondary\"\n          onClick={modalToggle}\n        >Cancel</CButton>\n      </CModalFooter>\n    </CModal>\n  </>\n)\n}\n\nexport default ModalForm","import {\n  CModalFooter,\n  CModalHeader,\n  CModalBody,\n  CModal,\n  CButton,\n  CModalTitle,\n} from '@coreui/react'\n\n\nconst ModalWarning = ({children, visible, modalToggle, title, onSubmit }) => {\n\n// const [modal, setModal] = useState(false);\n\n// const toggle = ()=>{\n//   setModal(!modal);\n// }\n\nreturn (\n    <CModal\n    show={visible}\n    onClose={modalToggle}\n    color=\"warning\"\n    >\n        <CModalHeader closeButton>\n             <CModalTitle>{title}</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n       {children}\n        </CModalBody>\n    <CModalFooter>\n        <CButton color=\"warning\" onClick={onSubmit}>Eliminar</CButton>\n        <CButton color=\"secondary\" onClick={modalToggle}>Cancelar</CButton>\n    </CModalFooter>\n    </CModal>);\n}\n\nexport default ModalWarning","import axios from 'axios';\nimport api from '../config'\n\n//retrieve data\nexport const getUsers = async () =>  {\n    const token = await localStorage.getItem('apitoken');\n    const config = {\n        headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Accept' : '*/*',\n            'host': 'arbam-test.herokuapp.com',\n            'Content-Type':'application/x-www-form-urlencoded',\n            'Authorization': token,\n        }\n        }\n    try {\n    const response = await axios.get(api.server+'/api/admin',config);\n    console.log(response.data);\n    return response.data;\n    } catch (err) {\n        console.log(err)\n    }\n}\n//create user\nexport const createUser = async (user) =>  {\n    const token = await localStorage.getItem('apitoken');\n    const config = {\n        headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Accept' : '*/*',\n            'host': 'arbam-test.herokuapp.com',\n            'Content-Type':'application/x-www-form-urlencoded',\n            'Authorization': token,\n        }\n        }\n    try {\n    const response = await axios.post(api.server+'/api/admin',user,config);\n    console.log(response.data);\n    return response.data;\n    } catch (err) {\n        console.log(err)\n    }\n}\n//delete user by id\nexport const deleteUser = async (id) =>  {\n    const token = await localStorage.getItem('apitoken');\n    const config = {\n        headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Accept' : '*/*',\n            'host': 'arbam-test.herokuapp.com',\n            'Content-Type':'application/x-www-form-urlencoded',\n            'Authorization': token,\n        }\n        }\n    try {\n    const response = await axios.delete(api.server+'/api/admin/'+id,config);\n    console.log(response.data);\n    return response.data;\n    } catch (err) {\n        console.log(err)\n    }\n}\n//update user by id\nexport const updateUser = async (user,id) =>  {\n    const token = await localStorage.getItem('apitoken');\n    const config = {\n        headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Accept' : '*/*',\n            'host': 'arbam-test.herokuapp.com',\n            'Content-Type':'application/x-www-form-urlencoded',\n            'Authorization': token,\n        }\n        }\n    try {\n    const response = await axios.put(api.server+'/api/admin/'+id,user,config);\n    console.log(response.data);\n    return response.data;\n    } catch (err) {\n        console.log(err)\n    }\n}","import React, { useEffect, useState, createRef } from 'react'\nimport classNames from 'classnames'\nimport {\n  CRow,\n  CCol,\n  CCard,\n  CCardHeader,\n  CCardBody,\n  CBadge,\n  CDataTable,\n  CButton,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CAlert,\n  CInputCheckbox,\n  CSelect,\n  CInputFile\n} from '@coreui/react'\nimport { rgbToHex } from '@coreui/utils'\nimport { DocsLink } from 'src/reusable';\nimport ModalForm from '../../../components/ModalForm/ModalForm';\nimport ModalWarning from '../../../components/ModalWarning/ModalWarning';\nimport {\n    getUsers,\n    deleteUser,\n    createUser,\n    updateUser\n} from '../../../services/usersService';\n\n\nconst getBadge = highlight => {\n  switch (highlight) {\n    case true: return 'success'\n    case false: return 'danger'\n    default: return 'primary'\n  }\n}\nconst fields = [{key: 'name', value: 'nombre', sorter: true},'email', 'phone_number', 'actions']\nconst fields1 = { name:'Nombre', email: 'Email', phone_number:'Télefono', actions: 'Acciones' }\nconst columnsFilter = { name:'Nombre', description: 'Descripcion', financial_knowledge: 'conocimiento Financiero', value: 'valor', highlight: 'Destacado' }\n// const fields2 = ['name']\n\nconst Users = ({history}) => {\n  const [visibleForm, setVisibleForm] = useState(false);\n  const [deleteRow, setDeleteRow] = useState(false);\n  const [editing, setEditing] = useState(false)\n  const [error, setError] = useState(false)\n  const [idForDelete, setIdForDelete] = useState(null);\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(null);\n  const [values, setValues] = useState({\n    id: '',\n    name: '',\n    email: '',\n    password: '',\n    confirm: '',\n    area_code: '',\n    phone_number: '',\n    // image: '',\n  });\n  const toggle = ()=>{\n    setVisibleForm(!visibleForm);\n    setValues({\n        name: '',\n        email: '',\n        password: '',\n        confirm: '',\n        area_code: '',\n        phone_number: '',\n        // image: '',\n      })\n      setEditing(false);\n}\n\n useEffect (() => {\n  handleLogout();\n  getData();\n},[])\n\nconst handleValidate = () => {\n    let fields = values;\n    let errors = {};\n    let formIsValid = true;\n\n}\n\nconst handleLogout = async () => {\n    const token =  await localStorage.getItem('apitoken');\n    if(token===null || token === undefined){\n      history.push('/login');\n    }\n   }\n\nconst handleEdit = (item) => {\n\n    setVisibleForm(!visibleForm);\n    setEditing(true);\n    setError(false);\n    setValues({...values,\n        id: item.id,\n        name: item.name,\n        email: item.email,\n        area_code: item.area_code,\n        phone_number: item.phone_number,\n        password: '',\n        confirm: '',\n        // image: '',\n      })\n\n}\n\n const getData = async () => {\n   try {\n    setLoading(true);\n    const response = await getUsers();\n    await setData(response.data.reverse());\n    if(response.data.length > 0) await setLoading(false);\n   } catch(err){\n     console.log(err)\n   }\n }\n const deleteItem = (id) => {\n    setDeleteRow(!deleteRow);\n    setIdForDelete(id)\n}\n\n const handleDelete = async (id) => {\n     console.log(id,'si entra al delete')\n     try {\n    if(id!==null){\n    await deleteUser(id)\n}\n    } catch (err) {\n        console.log(err);\n    }\n    setDeleteRow(!deleteRow);\n    await getData();\n}\n const storeUser = async () => {\n    let user = new FormData();\n    if(values.name==='' || values.email==='' || values.password==='' || values.confirm==='' || values.area_code==='' || values.phone_number===''){\n        setError(true)\n    }else{\n    user.append('name', values.name);\n    user.append('email', values.email);\n    user.append('password', values.password);\n    user.append('confirm', values.confirm);\n    user.append('area_code', values.area_code);\n    user.append('phone_number', values.phone_number);\n    try {\n        const response = await createUser(user)\n        if(response) {\n            console.log(response.data, 'usuario creado');\n            setVisibleForm(!visibleForm);\n            await getData();\n        }\n    } catch(err){\n        console.log(err)\n    }\n}\n }\n\n const handleChange = (e) => {\n    e.preventDefault();\n    setValues({...values,\n      [e.target.name] : e.target.value\n    })\n    console.log(values);\n\n  }\n  return (\n    <>\n      <CCard>\n        <CCardHeader>\n          {/* <DocsLink href=\"https://coreui.io/docs/utilities/colors/\"/> */}\n          <CButton\n          color=\"primary\"\n\n      onClick={() => toggle()}\n      className=\"mr-1\"\n    >Agregar Usuario</CButton>\n        </CCardHeader>\n        <CCol xs=\"12\" lg=\"12\">\n          <CCard>\n            <CCardHeader>\n              Usuarios\n            </CCardHeader>\n            <CCardBody>\n            <CDataTable\n              items={data}\n              fields={fields}\n              columnHeaderSlot={fields1}\n              itemsPerPage={10}\n              columnFilterSlot={fields}\n              loading={loading}\n              tableFilter={{label: 'Buscar', placeholder: 'Buscar Usuario'}}\n              pagination\n              striped\n              responsive\n              scopedSlots = {{\n                  'actions':\n              (item) => (\n                <td>\n                  <CButton style={{marginRight: 10}} onClick={() => handleEdit(item)} color=\"warning\">Editar</CButton>\n                  <CButton onClick={() => deleteItem(item.id)} color=\"danger\">Eliminar</CButton>\n                </td>\n              ),\n              'phone_number':\n              (item) => (\n              <td>{`${item.area_code} ${item.phone_number}`}</td>\n              )\n              }\n            }\n            />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CCard>\n      <ModalForm visible={visibleForm} modalToggle={toggle} isEditing={editing} title=\"Usuario\" onSubmit={() => storeUser()} >\n      <CCol xs=\"12\" sm=\"12\">\n          <CCard>\n            <CCardBody>\n                <CLabel hidden htmlFor=\"id\">id</CLabel>\n                <CInput hidden onChange={(e) => handleChange(e)} name=\"id\" id=\"id\" value={values.name} placeholder=\"id\" />\n              <CFormGroup>\n                <CLabel htmlFor=\"name\">Nombre</CLabel>\n                <CInput required valid={values.name!==''} onChange={(e) => handleChange(e)} name=\"name\" id=\"name\" value={values.name} placeholder=\"Nombre\" />\n              </CFormGroup>\n              <CFormGroup>\n                <CLabel htmlFor=\"email\">Email</CLabel>\n                <CInput onChange={(e) => handleChange(e)} required valid={values.email!=='' && values.email.includes('@')} invalid={values.email!=='' && !values.email.includes('@')} type=\"email\" name=\"email\" id=\"email\" value={values.email} placeholder=\"Email\" />\n              </CFormGroup>\n              <CFormGroup>\n                <CLabel htmlFor=\"password\">Contraseña</CLabel>\n                <CInput onChange={(e) => handleChange(e)} valid={values.password === values.confirm && values.password!=='' && values.confirm !==''} name=\"password\" type=\"password\" id=\"password\" value={values.password} placeholder=\"Contraseña\" />\n              </CFormGroup>\n              <CFormGroup>\n                <CLabel htmlFor=\"confirm\">Confirmar contraseña</CLabel>\n                <CInput onChange={(e) => handleChange(e)} valid={values.password === values.confirm && values.password!=='' && values.confirm !==''} invalid={values.password!== values.confirm && values.confirm!==''} name=\"confirm\" type=\"password\" id=\"confirm\" value={values.confirm} placeholder=\"Contraseña\" />\n              </CFormGroup>\n              <CFormGroup row className=\"my-0\">\n                <CCol xs=\"4\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"area_code\">Cod. Area</CLabel>\n                    <CInput valid={values.area_code!==''} onChange={(e) => handleChange(e)}  type=\"text\" name=\"area_code\" value={values.area_code} placeholder=\"cod. area\" />\n                  </CFormGroup>\n                </CCol>\n                <CCol xs=\"8\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"phone_number\">Número</CLabel>\n                    <CInput valid={values.phone_number!==''}  onChange={(e) => handleChange(e)} type=\"number\" name=\"phone_number\" id=\"phone_number\" value={values.phone_number} placeholder=\"Número\" />\n                  </CFormGroup>\n                </CCol>\n               { error ? <CCol>\n                    <CFormGroup>\n                        <CAlert color=\"danger\">\n                         Debes ingresar todos los campos!\n                        </CAlert>\n                    </CFormGroup>\n                </CCol>: null}\n              </CFormGroup>\n              {/* <CFormGroup row>\n                  <CLabel col md=\"3\" htmlFor=\"image\">Imagen</CLabel>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInputFile onChange={(e) => handleChange(e)} id=\"image\" name=\"image\"/>\n                  </CCol>\n              </CFormGroup> */}\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </ModalForm>\n      <ModalWarning visible={deleteRow} onSubmit={() => handleDelete(idForDelete)} modalToggle={() => deleteItem(null)} title=\"Eliminar Usuario\">Estas seguro de eliminar este Usuario?</ModalWarning>\n    </>\n  )\n}\n\nexport default Users\n"],"sourceRoot":""}